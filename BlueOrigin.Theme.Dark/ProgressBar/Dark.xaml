<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BlueOrigin.Theme.Dark"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:contols="clr-namespace:BlueOrigin.Wpf.Controls;assembly=BlueOrigin.Wpf.Controls"
                    xmlns:convertor="clr-namespace:BlueOrigin.Theme.Dark.Converter"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Dark.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <convertor:BorderClipConverter x:Key="BorderClipConverter"></convertor:BorderClipConverter>

    <!--暗色进度条的可以点击的-->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--暗色进度条-->
    <Style x:Key="darkSlider" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="MinHeight" Value="6"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground" BorderBrush="#111111" BorderThickness="1" Background="#111111" CornerRadius="1" Height="6.0" Margin="3,0" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" >
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Height" Value="14"/>
                                                <Setter Property="Width" Value="8"/>
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Setter Property="Background" Value="#D8D8D8"></Setter>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border SnapsToDevicePixels="true" CornerRadius="1" Background="{TemplateBinding Background}">
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Background" Value="White"></Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="true">
                                                                    <Setter Property="Background" Value="White"></Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--百分比-->
    <Style x:Key="percentProgressBar" TargetType="{x:Type contols:ProgressBar}">
        <Setter Property="Value" Value="0"></Setter>
        <Setter Property="Value2" Value="0"></Setter>
        <Setter Property="Minimum" Value="0"></Setter>
        <Setter Property="Maximum" Value="100"></Setter>
        <Setter Property="Ticks" Value="0.01"></Setter>
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="Height" Value="14"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type contols:ProgressBar}">
                    <Grid Name="bg" Background="{TemplateBinding Background}">
                        <Border Name="br"  BorderThickness="1" BorderBrush="Black"></Border>
                        <Rectangle Name="progress" Width="{TemplateBinding ValueWidth}" Fill="#0F8EE9" HorizontalAlignment="Left"></Rectangle>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"  VerticalAlignment="Center" ></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="%" VerticalAlignment="Center" ></TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="br" Property="BorderBrush" Value="#FF757575"></Setter>
                            <Setter TargetName="progress" Property="Fill" Value="#FF757575"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--匹配度进度-->
    <Style x:Key="matchProgressBar" TargetType="{x:Type contols:ProgressBar}">
        <Setter Property="Value" Value="0"></Setter>
        <Setter Property="Value2" Value="0"></Setter>
        <Setter Property="Minimum" Value="0"></Setter>
        <Setter Property="Maximum" Value="100"></Setter>
        <Setter Property="Ticks" Value="0.01"></Setter>
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="Height" Value="22"></Setter>
        <Setter Property="Width" Value="200"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type contols:ProgressBar}">
                    <Grid Name="bg" Background="{TemplateBinding Background}">
                        <Border Name="br"  BorderThickness="1" BorderBrush="#2F3241"></Border>
                        <Border Name="progress2" Height="{Binding ElementName=bg, Path=Height}" Width="{TemplateBinding Value2Width}" Background="Orange" BorderThickness="1" BorderBrush="#B66C1A" HorizontalAlignment="Left"></Border>
                        <Rectangle Name="progress" Height="{Binding ElementName=bg, Path=Height}" Width="{TemplateBinding ValueWidth}" Fill="#0CD562" HorizontalAlignment="Left"></Rectangle>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="%"></TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="br" Property="BorderBrush" Value="#2F3241"></Setter>-->
                            <Setter TargetName="progress" Property="Fill" Value="#2F3241"></Setter>
                            <Setter TargetName="progress2" Property="Background" Value="#2F3241"></Setter>
                            <Setter Property="Foreground" Value="#FF666666"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--匹配度进度，两个值都显示-->
    <Style x:Key="doubleMatchProgressBar" TargetType="{x:Type contols:ProgressBar}">
        <Setter Property="Value" Value="0"></Setter>
        <Setter Property="Value2" Value="0"></Setter>
        <Setter Property="Minimum" Value="0"></Setter>
        <Setter Property="Maximum" Value="100"></Setter>
        <Setter Property="Ticks" Value="0.01"></Setter>
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="Height" Value="22"></Setter>
        <Setter Property="Width" Value="200"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type contols:ProgressBar}">
                    <Grid Name="bg" Background="{TemplateBinding Background}">
                        <Border Name="br" BorderThickness="1" BorderBrush="#2F3241"></Border>
                        <Border Name="progress2" Height="{Binding ElementName=bg, Path=Height}" Width="{TemplateBinding Value2Width}" Background="Orange" BorderThickness="1" BorderBrush="#B66C1A" HorizontalAlignment="Left"></Border>
                        <Rectangle Name="progress" Height="{Binding ElementName=bg, Path=Height}" Width="{TemplateBinding ValueWidth}" Fill="#0CD562" HorizontalAlignment="Left"></Rectangle>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="%"></TextBlock>
                            <Label></Label>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="("></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value2}"></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text="%"></TextBlock>
                            <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{StaticResource normalFontSize}" Text=")"></TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="br" Property="BorderBrush" Value="#FF666666"></Setter>-->
                            <Setter TargetName="progress" Property="Fill" Value="#2F3241"></Setter>
                            <Setter TargetName="progress2" Property="Background" Value="#2F3241"></Setter>
                            <Setter TargetName="progress2" Property="BorderBrush" Value="#2F3241"></Setter>
                            <Setter Property="Foreground" Value="#FF666666"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--播放进度条-->
    <Style x:Key="playProgressBar" TargetType="{x:Type contols:ProgressBar}">
        <Setter Property="Value" Value="0"></Setter>
        <Setter Property="Value2" Value="0"></Setter>
        <Setter Property="Minimum" Value="0"></Setter>
        <Setter Property="Maximum" Value="100"></Setter>
        <Setter Property="Ticks" Value="0.01"></Setter>
        <Setter Property="Background" Value="#666666"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type contols:ProgressBar}">
                    <Border BorderThickness="0">
                        <Grid Name="bg" Background="{TemplateBinding Background}">
                            <!--<Rectangle Name="progress2" Width="{TemplateBinding Value2Width}" Fill="#FEC81B" HorizontalAlignment="Left"></Rectangle>-->
                            <Rectangle Name="progress" Width="{TemplateBinding ValueWidth}" Fill="#0794e5" HorizontalAlignment="Left"></Rectangle>
                            <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Foreground="White" FontWeight="Bold" FontSize="{StaticResource normalFontSize}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"></TextBlock>
                                <TextBlock Foreground="White" FontWeight="Bold" FontSize="{StaticResource normalFontSize}" Text="%"></TextBlock>
                            </StackPanel>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="progress" Property="Fill" Value="#FF757575"></Setter>
                            <!--<Setter TargetName="progress2" Property="Fill" Value="#FF454545"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--工作ProgressBar样式-->
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF27C8DB"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FF0C0F14"/>
    <Style x:Key="workProgressStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsIndeterminate" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4"/>
                        <Border x:Name="PART_Track"/>
                        <Border x:Name="PART_Indicator" CornerRadius="4" ClipToBounds="True" HorizontalAlignment="Left">
                            <!--解决：渲染剪切时会将控件渲染边缘作为边界，而不是设置了圆角后的显示边缘，导致显示溢出-->
                            <Border.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.Clip>
                            <Grid>
                                <Border x:Name="Indicator" Background="{TemplateBinding Foreground}" CornerRadius="16"/>
                                <Border x:Name="Animation" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" CornerRadius="16">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>