<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BlueOrigin.Theme.Dark"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Base/Dark.xaml"></ResourceDictionary>
        <ResourceDictionary Source="../ScrollBar/Dark.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="columeHeaderHeight">24</sys:Double>
    
    <!--列表行-->
    <Style x:Key="tableRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Resources>
            <!--这是解决焦点丢失后，选中行变灰的问题-->
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF3399FF"/>
        </Style.Resources>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="{StaticResource normalFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource normalFontColor}"/>
        <!--这个tag是给ContextMenu中的itme绑定用的-->
        <!--<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}"/>-->
        <!--<Setter Property="og:CommandBehavior.Event" Value="MouseDoubleClick"></Setter>
                <Setter Property="og:CommandBehavior.Command" Value="{Binding DataContext.ControlVM.SelectedDoubleClickCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}"></Setter>-->
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding IsValid}" Value="false">
                        <Setter Property="Foreground" Value="#FF666666"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsHide}" Value="true">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>-->
            <!--<Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{x:Null}" />
                                    </Trigger>-->
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#FF13161D" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#FF1E222D" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--列表列头-->
    <Style x:Key="tableColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="{StaticResource columeHeaderHeight}"/>
        <Setter Property="FontSize" Value="{StaticResource normalFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource infoFontColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource spectrumBarColor}"></Setter>
    </Style>

    <!--列表单元格-->
    <Style x:Key="tableCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--列表-->
    <Style x:Key="tableStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource pannelBackGroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource normalFontColor}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <!--隔行换色的颜色数-->
        <Setter Property="AlternationCount" Value="2"></Setter>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="RowStyle" Value="{StaticResource tableRowStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource tableColumnHeaderStyle}"></Setter>
        <Setter Property="CellStyle" Value="{StaticResource tableCellStyle}"></Setter>
        <Style.Resources>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource scrollBarStyle}">
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{StaticResource normalFontColor}"/>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>