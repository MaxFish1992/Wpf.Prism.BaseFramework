<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ZUI="clr-namespace:ZdfFlatUI">

    <PathGeometry x:Key="Arrow" Figures="M517.436772 598.65255l148.743683-148.775664c9.17855-9.17855 11.896936-22.866423 6.939879-34.859302-4.957057-11.960898-16.630126-19.732284-29.550454-19.732284L346.050532 395.285299c-12.920329 0-24.593398 7.803367-29.550454 19.732284-1.631032 3.965645-2.430557 8.123177-2.430557 12.248727 0 8.315063 3.262063 16.502202 9.370436 22.610575l148.775664 148.775664c6.01243 6.01243 14.135607 9.370436 22.610575 9.370436S511.456323 604.632999 517.436772 598.65255z" />
    <SolidColorBrush x:Key="Brush.Border.Static.BorderBrush" Color="#C6C6C6" />
    <SolidColorBrush x:Key="Brush.Path.Normal.Fill" Color="#B4B4B4" />
    <SolidColorBrush x:Key="Brush.Path.MouseOver.Fill" Color="#FFFFFF" />
    <SolidColorBrush x:Key="Brush.DropDownIcon.MouseOver.Background" Color="#3399FF" />
    <SolidColorBrush x:Key="Brush.DropDownIcon.IsChecked.Background" Color="#628BEF" />

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0,3,3,0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Path x:Name="path" Width="8" Height="8"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{StaticResource Arrow}"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Cursor" Value="Arrow" />
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter Property="Background" Value="#20000000" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Root" Property="Cursor" Value="Arrow" />
                            <Setter Property="Background" Value="#30000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3,0,0,3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="#10000000" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="#20000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ZUI:SplitButtonItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZUI:SplitButtonItem}">
                    <Border x:Name="PART_Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2" Value="#FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_Root" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2" Value="#E3E8EE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ZUI:SplitButton}">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Static.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZUI:SplitButton}">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True" CornerRadius="3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Style="{StaticResource ButtonStyle}">
                                
                            </Button>
                            <Popup MinWidth="{Binding ActualWidth,
                                                      ElementName=Root}"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsChecked,
                                                    ElementName=toggleButton}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=Root}"
                                   StaysOpen="False" VerticalOffset="1">
                                <Border Background="#FFFFFF" CornerRadius="3" ClipToBounds="True"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,1,1,1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                    <ZUI:ZScrollViewer Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                                       Padding="{TemplateBinding Control.Padding}"
                                                       VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter Margin="0,3" />
                                    </ZUI:ZScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Grid.Column="1"
                                          IsChecked="{Binding Path=IsDropDownOpen,
                                                              RelativeSource={RelativeSource TemplatedParent},
                                                              Mode=TwoWay}"
                                          Padding="5,0"
                                          Style="{StaticResource ToggleButtonStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>